version: '3'

tasks:
  install-linter:
    desc: Install golangci-lint based on the GOOS value from go env
    cmds:
      - |
        GOOS=$(go env GOOS)
        case "$GOOS" in
          "windows")
            if command -v choco > /dev/null; then
              echo "Installing golangci-lint with Chocolatey..."
              choco install golangci-lint
              exit 0
            else
              echo "Error: Chocolatey is not installed. Please install it first: https://chocolatey.org/install"
              exit 1
            fi
            ;;
          "darwin")
            if command -v brew > /dev/null; then
              echo "Installing golangci-lint with Homebrew..."
              brew install golangci-lint
              exit 0
            else
              echo "Error: Homebrew is not installed. Please install it first: https://brew.sh/"
              exit 1
            fi
            ;;
          "linux")
            if [ -f /etc/os-release ]; then
              . /etc/os-release
              if [ "$ID" = "ubuntu" ]; then
                echo "Ubuntu detected. Installing golangci-lint using snap..."
                sudo snap install golangci-lint --classic
                exit 0
              else
                echo "Linux detected, but not Ubuntu. Please install golangci-lint using your package manager."
                echo "Examples:"
                echo "  apt: sudo apt install golangci-lint"
                echo "  yum: sudo yum install golangci-lint"
                echo "  pacman: sudo pacman -S golangci-lint"
                exit 0
              fi
            else
              echo "Linux detected, but OS information could not be determined."
              echo "Please install golangci-lint using your package manager."
              exit 0
            fi
            exit 1
            ;;
          *)
            echo "Unsupported OS: $GOOS"
            exit 1
            ;;
        esac
  lint:
      desc: Run linters using golangci-lint
      cmds:
        #- go build cmd/server/*.go
        - golangci-lint run --config .golangci.yml
      silent: true
  clear:
      cmds:
        - mkdir -p ./.runtime
        - rm -f ./.runtime/{agent,server,BACKUP,test.log}
        # - go fmt ./...
        - rm -f logs/{test1.log,test2.log,test3.log,test4.log,test5.log,test6.log,test7.log,test8.log,test9.log,test10.log,test11.log,test12.log,test13.log,test14.log}
      silent: true
  build:
      deps: [lint, clear]
      cmds:
        - go fmt ./...
        - go vet ./...
        #- go build cmd/server/*.go
        - go build -o ./.runtime/agent ./cmd/agent/*.go
        - go build -o ./.runtime/server ./cmd/server/*.go
      silent: true
  test:
      deps: [build]
      cmds:
        #- go test -cover ./... > logs/cover.log
        - metricstest -test.v -test.run=^TestIteration1$ -binary-path=cmd/server/server >> logs/test1.log
        - metricstest -test.v -test.run=^TestIteration2[AB]*$ -source-path=. -agent-binary-path=cmd/agent/agent >> logs/test2.log
        - metricstest -test.v -test.run=^TestIteration3[AB]*$ -source-path=. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server >> logs/test3.log
        - metricstest -test.v -test.run=^TestIteration4$ -source-path=. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server -server-port=8080 >> logs/test4.log
        #- metricstest -test.v -test.run=^TestIteration5$ -source-path=. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server -server-port=8080 >> logs/test5.log
        #- metricstest -test.v -test.run=^TestIteration6$ -source-path=. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server -server-port=8080 >> logs/test6.log
        #- metricstest -test.v -test.run=^TestIteration7$ -source-path=. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server -server-port=8080 >> logs/test7.log
        #- metricstest -test.v -test.run=^TestIteration8$ -source-path=. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server -server-port=8080 >> logs/test8.log
        #- metricstest -test.v -test.run=^TestIteration9$ -file-storage-path=./BACKUP -source-path=\. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server -server-port=8080 >> logs/test9.log
  
         #- metricstest -test.v -test.run=^TestIteration10$ -source-path=. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server -server-port=8080  -database-dsn="host=localhost port=5432 user=postgres password=admin dbname=MetricStore sslmode=disable" >> logs/test10.log

        #- metricstest -test.v -test.run=^TestIteration11$ -source-path=. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server -server-port=8080  -database-dsn="host=localhost port=5432 user=postgres password=admin dbname=MetricStore sslmode=disable" >> logs/test11.log

        #- metricstest -test.v -test.run=^TestIteration12$ -source-path=. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server -server-port=8080  -database-dsn="host=localhost port=5432 user=postgres password=admin dbname=MetricStore sslmode=disable" >> logs/test12.log
        - metricstest -test.v -test.run=^TestIteration13$ -source-path=. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server -server-port=8080  -database-dsn="host=localhost port=5432 user=postgres password=admin dbname=MetricStore sslmode=disable" >> logs/test13.log
        - metricstest -test.v -test.run=^TestIteration14$ -source-path=. -agent-binary-path=cmd/agent/agent -binary-path=cmd/server/server -server-port=8080  -database-dsn="host=localhost port=5432 user=postgres password=admin dbname=MetricStore sslmode=disable" -key=123 >> logs/test14.log
        - mv ./BACKUP ./.runtime/


