/*
Package main содержит multichecker - инструмент статического анализа для проекта metrics-collector.

StaticLint - это кастомный multichecker, который объединяет различные статические анализаторы
для обеспечения качества кода в проекте metrics-collector.

# Используемые анализаторы

1. Стандартные статические анализаторы из пакета golang.org/x/tools/go/analysis/passes:
  - asmdecl: проверяет соответствие объявлений assembly и go деклараций
  - assign: обнаруживает бесполезные присваивания
  - atomic: проверяет распространенные ошибки при использовании пакета sync/atomic
  - bools: проверяет распространенные ошибки в логических операциях
  - buildtag: проверяет синтаксис build-тегов
  - composite: проверяет литералы композитных типов
  - copylock: обнаруживает ошибки при копировании блокировок
  - И множество других стандартных анализаторов

2. Все анализаторы класса SA (статического анализа) из пакета staticcheck.io:
  - SA1000: проверка неправильного использования регулярных выражений
  - SA1001: неверные шаблоны для Printf
  - SA1002: ненужные преобразования с руной
  - SA1003: неправильное использование сравнения строк
  - И множество других анализаторов класса SA

3. Дополнительные анализаторы из других классов staticcheck.io:
  - ST1000: проверка наличия комментария-документации в пакете
  - ST1001: проверяет правильность названий переменных для интерфейсов

4. Публичные анализаторы:
  - bodyclose: проверяет, что тела HTTP-ответов всегда закрываются
  - errcheck: проверяет обработку возвращаемых ошибок

5. Собственные анализаторы:
  - exitchecker: запрещает прямое использование os.Exit в функции main пакета main

# Использование

Чтобы запустить проверку всего проекта:

	go run ./cmd/staticlint/... ./...

Чтобы запустить проверку определенного пакета:

	go run ./cmd/staticlint/... ./internal/...

Дополнительные флаги:

	-explain - показать подробное объяснение для каждой проблемы
	-fix - автоматически исправить некоторые проблемы, если возможно
	-json - форматировать вывод в формате JSON

# Установка зависимостей

Перед использованием необходимо установить зависимости:

	go get -u github.com/timakin/bodyclose github.com/kisielk/errcheck
	go get -u golang.org/x/tools/...
	go get -u honnef.co/go/tools/...

Для получения дополнительной информации см. README.md
*/
package main
